const express = require('express');
require('express-async-errors');
const _ = require('lodash');
const Lake = require('../../../database/models/Lake');
const Country = require('../../../database/models/Country');
const { lakeToClient, lakesToClient } = require('../helpers/lakeConverter');

const getAllLakes = async (req, res) => {
  // –ø–æ–∏—Å–∫ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω –≤ –ë–î üëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπ
  const lakes = await Lake.find().populate('country');

  res.json({
    success: true,
    results: lakes.length,
    lakes: lakesToClient(lakes)
  });
};

const getOneLake = async (req, res) => {
  // —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ ID –æ–∑–µ—Ä–∞ –∏–∑ —Å—Å—ã–ª–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
  const { lakeId } = req.params;

  // –ø–æ–∏—Å–∫ –æ–∑–µ—Ä–∞ –≤ –ë–î üëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπüëªüëπ
  const lake = await Lake.findOne({ _id: lakeId }).populate('country');

  res.json({
    success: true,
    lake: lakeToClient(lake)
  });
};

const makeOneLake = async (req, res) => {
  // —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞
  const { name, countryId } = req.body;

  // –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–∞–Ω—ã –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –≤ –ë–î
  const country = await Country.findOne({ _id: countryId });
  if (!country) {
    throw new Error(`No country with id: ${countryId}`);
  }

  // —Å–æ–∑–¥–∞–Ω–∏–µ –æ–∑–µ—Ä–∞
  const lake = new Lake({
    name,
    country: countryId,
    timeOfCreation: Date.now()
  });

  // –∑–∞–ø–∏—Å—å –æ–∑–µ—Ä–∞ –≤ –ë–î
  await lake.save();

  res.json({
    success: true,
    newLakeId: lake._id
  });
};

module.exports = {
  getAllLakes,
  getOneLake,
  makeOneLake
};
